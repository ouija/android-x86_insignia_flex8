diff -Naur a/drivers/acpi/acpi_lpss.c b/drivers/acpi/acpi_lpss.c
--- a/drivers/acpi/acpi_lpss.c	2020-11-25 17:04:58.991260564 -0700
+++ b/drivers/acpi/acpi_lpss.c	2020-11-25 17:11:21.540290113 -0700
@@ -881,7 +881,7 @@
 static DEFINE_MUTEX(lpss_iosf_mutex);
 static bool lpss_iosf_d3_entered = true;
 
-static void lpss_iosf_enter_d3_state(void)
+static void lpss_iosf_enter_d3_state(int verbose)
 {
 	u32 value1 = 0;
 	u32 mask1 = LPSS_GPIODEF0_DMA_D3_MASK | LPSS_GPIODEF0_DMA_LLP;
@@ -911,8 +911,12 @@
 	 * are already in D3hot.
 	 */
 	pmc_status = (~(d3_sts_0 | func_dis)) & pmc_mask;
-	if (pmc_status)
+	if (pmc_status) {
+		if (verbose)
+			pr_err("acpi-lpss: busy devices %08x\n", pmc_status);
 		goto exit;
+	}
+	pr_err("acpi-lpss: suspend DMA\n");
 
 	iosf_mbi_modify(LPSS_IOSF_UNIT_LPIO1, MBI_CFG_WRITE,
 			LPSS_IOSF_PMCSR, value2, mask2);
@@ -974,7 +978,7 @@
 	 */
 	if (acpi_target_system_state() == ACPI_STATE_S0 &&
 	    lpss_quirks & LPSS_QUIRK_ALWAYS_POWER_ON && iosf_mbi_available())
-		lpss_iosf_enter_d3_state();
+		lpss_iosf_enter_d3_state(0);
 
 	return ret;
 }
@@ -1036,6 +1040,23 @@
 
 	return ret ? ret : pm_generic_runtime_resume(dev);
 }
+
+#ifdef CONFIG_PM_SLEEP
+static int acpi_lpss_suspend_noirq(struct device *dev)
+{
+	pr_info("acpi_lpss_suspend_noirq\n");
+	if (lpss_quirks & LPSS_QUIRK_ALWAYS_POWER_ON && iosf_mbi_available())
+		lpss_iosf_enter_d3_state(1);
+	return 0;
+}
+static int acpi_lpss_resume_noirq(struct device *dev)
+{
+	pr_info("acpi_lpss_resume_noirq\n");
+	if (lpss_quirks & LPSS_QUIRK_ALWAYS_POWER_ON && iosf_mbi_available())
+		lpss_iosf_exit_d3_state();
+	return 0;
+}
+#endif /* CONFIG_PM_SLEEP */
 #endif /* CONFIG_PM */
 
 static struct dev_pm_domain acpi_lpss_pm_domain = {
@@ -1050,8 +1071,8 @@
 		.complete = acpi_subsys_complete,
 		.suspend = acpi_subsys_suspend,
 		.suspend_late = acpi_lpss_suspend_late,
-		.suspend_noirq = acpi_subsys_suspend_noirq,
-		.resume_noirq = acpi_subsys_resume_noirq,
+		.suspend_noirq = acpi_lpss_suspend_noirq,
+		.resume_noirq = acpi_lpss_resume_noirq,
 		.resume_early = acpi_lpss_resume_early,
 		.freeze = acpi_subsys_freeze,
 		.freeze_late = acpi_subsys_freeze_late,
