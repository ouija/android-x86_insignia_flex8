From 4dd2ae77b92440f3bb9b90255565604ad8e2e8bb Mon Sep 17 00:00:00 2001
From: Johannes Stezenbach <js@sig21.net>
Date: Mon, 14 Aug 2017 23:07:29 +0200
Subject: [PATCH 3/3] ACPI / LPSS: test patch for S0ix support

Make sure lpss_iosf_enter_d3_state() is called late
when entering s2idle. Be verbose about it for debug.

Signed-off-by: Johannes Stezenbach <js@sig21.net>
---
 drivers/acpi/acpi_lpss.c | 29 ++++++++++++++++++++++++++---
 1 file changed, 26 insertions(+), 3 deletions(-)

diff --git a/drivers/acpi/acpi_lpss.c b/drivers/acpi/acpi_lpss.c
index 71de49df4f45..665e3f08c951 100644
--- a/drivers/acpi/acpi_lpss.c
+++ b/drivers/acpi/acpi_lpss.c
@@ -753,7 +753,7 @@ static int acpi_lpss_resume_early(struct device *dev)
 
 static DEFINE_MUTEX(lpss_iosf_mutex);
 
-static void lpss_iosf_enter_d3_state(void)
+static void lpss_iosf_enter_d3_state(int verbose)
 {
 	u32 value1 = 0;
 	u32 mask1 = LPSS_GPIODEF0_DMA_D3_MASK | LPSS_GPIODEF0_DMA_LLP;
@@ -786,8 +786,12 @@ static void lpss_iosf_enter_d3_state(void)
 	 * are already in D3hot.
 	 */
 	pmc_status = (~(d3_sts_0 | func_dis)) & pmc_mask;
-	if (pmc_status)
+	if (pmc_status) {
+		if (verbose)
+			pr_err("acpi-lpss: busy devices %08x\n", pmc_status);
 		goto exit;
+	}
+	pr_err("acpi-lpss: suspend DMA\n");
 
 	iosf_mbi_modify(LPSS_IOSF_UNIT_LPIO1, MBI_CFG_WRITE,
 			LPSS_IOSF_PMCSR, value2, mask2);
@@ -843,7 +847,7 @@ static int acpi_lpss_runtime_suspend(struct device *dev)
 	 * lpss_iosf_enter_d3_state() for further information.
 	 */
 	if (lpss_quirks & LPSS_QUIRK_ALWAYS_POWER_ON && iosf_mbi_available())
-		lpss_iosf_enter_d3_state();
+		lpss_iosf_enter_d3_state(0);
 
 	return ret;
 }
@@ -871,6 +875,23 @@ static int acpi_lpss_runtime_resume(struct device *dev)
 
 	return pm_generic_runtime_resume(dev);
 }
+
+#ifdef CONFIG_PM_SLEEP
+static int acpi_lpss_suspend_noirq(struct device *dev)
+{
+	pr_info("acpi_lpss_suspend_noirq\n");
+	if (lpss_quirks & LPSS_QUIRK_ALWAYS_POWER_ON && iosf_mbi_available())
+		lpss_iosf_enter_d3_state(1);
+	return 0;
+}
+static int acpi_lpss_resume_noirq(struct device *dev)
+{
+	pr_info("acpi_lpss_resume_noirq\n");
+	if (lpss_quirks & LPSS_QUIRK_ALWAYS_POWER_ON && iosf_mbi_available())
+		lpss_iosf_exit_d3_state();
+	return 0;
+}
+#endif /* CONFIG_PM_SLEEP */
 #endif /* CONFIG_PM */
 
 static struct dev_pm_domain acpi_lpss_pm_domain = {
@@ -885,6 +906,8 @@ static struct dev_pm_domain acpi_lpss_pm_domain = {
 		.complete = pm_complete_with_resume_check,
 		.suspend = acpi_subsys_suspend,
 		.suspend_late = acpi_lpss_suspend_late,
+		.suspend_noirq = acpi_lpss_suspend_noirq,
+		.resume_noirq = acpi_lpss_resume_noirq,
 		.resume_early = acpi_lpss_resume_early,
 		.freeze = acpi_subsys_freeze,
 		.poweroff = acpi_subsys_suspend,
-- 
2.14.1

